---
const { location } = Astro.props;

const linkClass = "block mt-2 lg:mt-0 lg:inline-block lg:mr-4 rounded-md py-2.5 px-3.5 hover:text-stone-800 hover:bg-red-300 dark:hover:bg-red-400";
---

<nav
	class="w-full lg:h-[8.75%] flex items-center justify-between py-4 px-8 lg:mx-auto lg:justify-center bg-stone-800 text-orange-100 dark:bg-stone-700"
>
	<div class="flex items-center justify-between flex-wrap w-full lg:w-4/5">
		<a href="/">
			<div
				class="group flex items-center flex-shrink-0 flex-grow hover:text-red-400 py-2.5 px-3.5"
			>
				<!-- Logo Element -->
				<span class="font-bold text-xl">QuynhBio</span>
			</div>
		</a>

		<div class="block lg:hidden">
			<button
				id="navbarBurger"
				class="group flex items-center rounded-md py-2.5 px-3.5 bg-orange-100 hover:text-stone-800 hover:bg-red-300 dark:bg-stone-800 dark:hover:bg-red-400"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width="16"
					height="16"
					class="bi bi-list fill-stone-800 dark:fill-orange-100 group-hover:fill-stone-800"
					viewBox="0 0 16 16"
				>
					<title>Menu</title>
					<path
						fill-rule="evenodd"
						d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5"
					></path>
				</svg>
			</button>
		</div>

		<div
			id="navbarLinks"
			class="w-full hidden lg:flex lg:items-center lg:w-auto"
		>
			<div>
				<a id="navbarLink-Home" href="/" class={linkClass}> Home </a>
				<a id="navbarLink-Shop" href="/shop" class={linkClass}> Shop </a>
				<a id="navbarLink-Blog" href="/blog" class={linkClass}> Blog </a>
				<a id="navbarLink-About" href="/about" class={linkClass}> About </a>
				<a id="navbarLink-Contact" href="/contact" class={linkClass}> Contact </a>
			</div>
		</div>
	</div>
</nav>
<script define:vars={{ location }}>
	const highlightedLink = document.getElementById(`navbarLink-${location}`);
	highlightedLink.classList.add("text-red-400");

	function getStyle(element, name) {
		return element.currentStyle
			? element.currentStyle[name]
			: window.getComputedStyle
				? window.getComputedStyle(element, null).getPropertyValue(name)
				: null;
	}

	document.getElementById("navbarBurger").addEventListener("click", (e) => {
		const navLinks = document.getElementById("navbarLinks");
		const isMenuHidden = getStyle(navLinks, "display") === "none";
		navLinks.style.display = isMenuHidden ? "block" : "none";
	});

	window.addEventListener("resize", (e) => {
		const TAILWIND_LG_BREAKPOINT = 1024;
		const navLinks = document.getElementById("navbarLinks");

		const isLandscape = window.innerWidth >= TAILWIND_LG_BREAKPOINT;
		navLinks.style.display = isLandscape ? "flex" : "none";
	});
</script>
